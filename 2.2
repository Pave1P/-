def hamming_distance(a, b):
    return sum(c1 != c2 for c1, c2 in zip(a, b))

def find_error(code, codes):
    for i, c in enumerate(codes):
        if hamming_distance(code, c) == 1:
            return i
    return -1

def correct_error(code, codes):
    for i, c in enumerate(codes):
        if hamming_distance(code, c) == 1:
            return c
    return code

# Example usage
letters = "абвгдежз"
codes_distance_2 = ["000", "011", "101", "110", "111", "100", "010", "001"]
codes_distance_3 = ["0000", "0111", "1011", "1101", "1110", "1001", "0101", "0011"]

# Demonstrate error detection
error_code = "010"
error_pos = find_error(error_code, codes_distance_2)
print("Error detected at position:", error_pos)

# Demonstrate error correction
corrected_code = correct_error(error_code, codes_distance_3)
print("Corrected code:", corrected_code)
